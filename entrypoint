#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

# run in the background and allow it some time to start before continuing
/app/cloud_sql_proxy -verbose -structured_logs -dir=/cloudsql -instances=$INSTANCE_CONNECTION_NAME &
sleep 10
echo "Created Cloud SQL Proxy at $INSTANCE_CONNECTION_NAME, running in the background"

if [ -z "${POSTGRES_USER}" ]; then
    base_postgres_image_default_user='postgres'
    export POSTGRES_USER="${base_postgres_image_default_user}"
fi
echo "Set/checked POSTGRES_USER..."

# omit the port when running on App Engine, Cloud Run etc
if [ -z "${INSTANCE_CONNECTION_NAME}" ]; then
    export DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"
    echo "Set up database URL for running in Cloud SQL (Unix Socket)"
else
    export DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}"
    echo "Set up database URL for running outside Cloud SQL (host and port)"
fi

echo "Database URL: ${DATABASE_URL}"

postgres_ready() {
python << END
import sys

import psycopg2

try:
    psycopg2.connect(
        dbname="${POSTGRES_DB}",
        user="${POSTGRES_USER}",
        password="${POSTGRES_PASSWORD}",
        host="${POSTGRES_HOST}",
        port="${POSTGRES_PORT}",
    )
except psycopg2.OperationalError:
    sys.exit(-1)
sys.exit(0)

END
}
until postgres_ready; do
  >&2 echo 'Waiting for PostgreSQL to become available...'
  sleep 1
done
>&2 echo 'PostgreSQL is available'

python /app/manage.py migrate
>&2 echo 'Ran database migrations...'

python /app/manage.py createcachetable
>&2 echo 'Created the cache table...'

python /app/manage.py collectstatic --noinput
>&2 echo 'Collected static files...'

compress_enabled() {
python << END
import sys

from environ import Env

env = Env(COMPRESS_ENABLED=(bool, True))
if env('COMPRESS_ENABLED'):
    sys.exit(0)
else:
    sys.exit(1)

END
}

if compress_enabled; then
  # NOTE this command will fail if django-compressor is disabled
  python /app/manage.py compress
  >&2 echo 'Compressed static assets...'
fi

>&2 echo 'About to run Gunicorn...'
/usr/local/bin/gunicorn config.asgi --bind 0.0.0.0:$PORT --chdir=/app -k uvicorn.workers.UvicornWorker
