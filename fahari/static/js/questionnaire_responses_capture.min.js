var SCALAR_VALUE="-",LIST_VALUE="[]",DICT_VALUE="{}";function annotateQuestionAnswerInput(e,n,a=False){if($question_answer_input=$(`[data-question=${e}]`),a)return $question_answer_input.addClass(),void $question_answer_input.prop("disabled",!0);$question_answer_input.prop("disabled",!1),n?$question_answer_input.addClass("is-valid"):$question_answer_input.addClass("is-invalid")}function cleanFormData(e){for(var n={},a=0;a<e.length;a++){var s=e[a],t="string"==typeof s.value?s.value.trim():s.value;n.hasOwnProperty(s.name)?n[s.name].push(t):n[s.name]=[t]}return n}function composeQuestionAnswersRequestPayload(e){var n,a,s,t={};for(n in e)e.hasOwnProperty(n)&&(a=retrieveQuestionDataFromInputName(n),s=e[n],t[a.question_id]=$.extend(t[a.question_id],{[a.field_name]:1===s.length?s[0]:s}));return t}function markQuestionGroupAsApplicable(e){$(`#clp_toggle_${e}`).prop("disabled",!1)}function markQuestionGroupAsNonApplicable(e){var n=$(`#clp_${e}`),e=$(`#clp_toggle_${e}`);n.collapse("hide"),e.prop("disabled",!0)}function retrieveQuestionDataFromInputName(e,n=":::",a,s){var t=e.indexOf(n),o=e.substring(0,t),e=e.substring(t+n.length),t=e.indexOf(n);return{field_name:o,question_id:e.substring(0,t),question_type:e.substring(t+n.length)}}document.addEventListener("DOMContentLoaded",function(){$(".applicability_toggle").on("change",function(){var e=$(this).data("question_group");($(this).prop("checked")?markQuestionGroupAsApplicable:markQuestionGroupAsNonApplicable)(e)}),$("form.question_group_answers_form button.save_changes").on("click",function(){var e=$(this).data("question_group"),n=composeQuestionAnswersRequestPayload(cleanFormData($(`#question_group_form_${e}`).serializeArray())),a=this,s=$(this).data("save_changes_url");$.ajax({beforeSend:function(){return $(a).prop("disabled",!0),$(a).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Saving ...'),!0},complete:function(){$(a).prop("disabled",!1),$(a).html("Save Changes")},contentType:"application/json; charset=UTF-8",data:JSON.stringify({question_group:e,question_answers:n}),dataType:"json",error:function(e,n,a){},headers:{"X-CSRFToken":$("[name=csrfmiddlewaretoken]").val()},method:"POST",success:function(e,n){if(console.log(e),1==e.success)for(var a in e.answers)e.answers.hasOwnProperty(a)&&(answer_data=e.answers[a].data)},url:s})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
