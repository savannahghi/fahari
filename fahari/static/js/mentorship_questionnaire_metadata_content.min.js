document.addEventListener("DOMContentLoaded",function(){window.mentor_edit_id=-1;var t=$("#btn_save_mentor_details"),i=$("#capture_mentor_details_modal"),e=($("#questionnaire_response_form"),$("#mentorship_details_form")),d=$("#questionnaire-mentorship-team-list > tbody"),r=$("#id_mentors"),o=["name","role","member_org","phone_number"];function n(t){t.preventDefault();for(var e=$(this).data("mentor-id"),n=0;n<o.length;n++){var a=o[n],r=$(`#td_${a}_${e}`).data(a);$(`input[name=${a}`).val(r)}window.mentor_edit_id=e,i.modal("show")}function s(){d.html("");var t=JSON.parse(r.val());if(t&&0<t.length)for(var e=0;e<t.length;e++)!function(t,e){for(var n=`<tr id="tr_mentor_details_${e}">`,a=0;a<o.length;a++){var r=o[a],i=t[r];n+=`<td id="td_${r}_${e}" data-${r}="${i}">${i}</td>`}n+=`<td><a href="#" data-mentor-id="${e}"><i class="fas fa-edit"></a></td>`,d.append(n+="</tr>")}(t[e],e);else d.append(`
                <tr class="odd">
                    <td valign="top" colspan="5" class="dataTables_empty">No mentors added yet</td>
                </tr>
            `);$("#questionnaire-mentorship-team-list > tbody > tr > td > a").on("click",n)}i.on("hidden.bs.modal",function(){e.trigger("reset"),window.mentor_edit_id=-1}),e.validate({errorClass:"is-invalid",errorElement:"span",submitHandler:function(t){for(var e=$(t).serializeArray(),n={},a=0;a<e.length;a++)n[e[a].name]=e[a].value;t=(t=JSON.parse(r.val()))||[];-1<window.mentor_edit_id?t[window.mentor_edit_id]=n:t.push(n),r.val(JSON.stringify(t)),s(),i.modal("hide")}}),s(),t.click(function(t){e.submit(),e.trigger("reset")})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
